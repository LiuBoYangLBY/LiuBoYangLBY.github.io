<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>basic-1010</title>
      <link href="/2018/10/07/basic-1010/"/>
      <url>/2018/10/07/basic-1010/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; d;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">        d.push_back(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;d.size();i+=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[i+<span class="number">1</span>]==<span class="number">0</span>)&#123;</span><br><span class="line">           <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;d[i]*d[i+<span class="number">1</span>]&lt;&lt;<span class="string">" "</span>&lt;&lt;d[i+<span class="number">1</span>]<span class="number">-1</span>;</span><br><span class="line">        ++count;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"0 0"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//根本不用一次全输入完再统一检查。。。输入一对检查一对就行。。。零多项式表示没有输入多项式，但是要用0 0表示，因此最后要加一个判定</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1001</title>
      <link href="/2018/10/07/basic-1001/"/>
      <url>/2018/10/07/basic-1001/</url>
      <content type="html"><![CDATA[<p>先把代码传上来…思路和解题方法什么的慢慢补…最开始都是些简单到不能再简单的oj题，一步一步慢慢走。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/*if(num == 1)&#123;</span></span><br><span class="line"><span class="comment">        std::cout&lt;&lt;1;</span></span><br><span class="line"><span class="comment">        return 0;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">while</span>(num!=<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(num%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            num = <span class="number">3</span>*num + <span class="number">1</span>;</span><br><span class="line">            num /= <span class="number">2</span>;</span><br><span class="line">            count += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            num /= <span class="number">2</span>;</span><br><span class="line">            count += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;count;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1003</title>
      <link href="/2018/10/07/basic-1003/"/>
      <url>/2018/10/07/basic-1003/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="built_in">string</span> str)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nP=<span class="number">0</span>,nT=<span class="number">0</span>,nA=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;item:str)&#123;</span><br><span class="line">        <span class="keyword">if</span>(item == <span class="string">'P'</span> )&#123;</span><br><span class="line">            nP++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(item == <span class="string">'T'</span>)&#123;</span><br><span class="line">            nT++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(item == <span class="string">'A'</span>)&#123;</span><br><span class="line">            nA++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(item!=<span class="string">'P'</span> &amp;&amp; item !=<span class="string">'A'</span> &amp;&amp; item !=<span class="string">'T'</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(nA==<span class="number">0</span>||nP&gt;<span class="number">1</span>||nT&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(nP==<span class="number">0</span>||nT==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> P = find(str.begin(),str.end(),<span class="string">'P'</span>);</span><br><span class="line">    <span class="keyword">auto</span> T = find(str.begin(),str.end(),<span class="string">'T'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(P&gt;T||P+<span class="number">1</span>==T)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">auto</span> total = (P-str.cbegin())*(T-P<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">if</span>(total != (str.cend()-T<span class="number">-1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(P-str.cbegin() == str.cend()-T<span class="number">-1</span> &amp;&amp; T-P==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">        <span class="keyword">bool</span> b = judge(str);</span><br><span class="line">        <span class="keyword">if</span>(b)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1004</title>
      <link href="/2018/10/07/basic-1004/"/>
      <url>/2018/10/07/basic-1004/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vname;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vid;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vgrade;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="built_in">string</span> id;</span><br><span class="line">    <span class="keyword">int</span> grade;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;name&gt;&gt;id&gt;&gt;grade;</span><br><span class="line">        vname.push_back(name);</span><br><span class="line">        vid.push_back(id);</span><br><span class="line">        vgrade.push_back(grade);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;name&lt;&lt;id&lt;&lt;grade&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> min = <span class="number">0</span>,max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vgrade.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vgrade[i]&lt;vgrade[min])&#123;</span><br><span class="line">            min = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(vgrade[i]&gt;vgrade[max])&#123;</span><br><span class="line">            max = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;vname[max]&lt;&lt;<span class="string">" "</span>&lt;&lt;vid[max]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;vname[min]&lt;&lt;<span class="string">" "</span>&lt;&lt;vid[min];</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1005</title>
      <link href="/2018/10/07/basic-1005/"/>
      <url>/2018/10/07/basic-1005/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; num,end;   <span class="comment">//两个vector，一个用来保存输入，一个用来保存结果</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; cover(<span class="number">100</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(<span class="number">0</span>));  <span class="comment">//用来保存每个输入值在递推过程中遇到的所有数</span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;temp;</span><br><span class="line">        num.push_back(temp);</span><br><span class="line">        end.push_back(temp);  <span class="comment">//首先将所有输入保存，随后再删除</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num.size();++i)&#123;   <span class="comment">//遍历所有输入，保存每个输入值在递推过程中遇到的所有数</span></span><br><span class="line">        <span class="keyword">int</span> temp = num[i];</span><br><span class="line">        <span class="keyword">while</span>(temp!=<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(temp%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">                temp = <span class="number">3</span>*temp + <span class="number">1</span>;</span><br><span class="line">                temp = temp/<span class="number">2</span>;</span><br><span class="line">                cover[i].push_back(temp);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                temp = temp/<span class="number">2</span>;</span><br><span class="line">                cover[i].push_back(temp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(find(end.begin(),end.end(),num[i])==end.end())&#123;   <span class="comment">//如果某一输入值已经从结果中去除，则不需要对该值进行循环，以此降低时间开销</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;         </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;num.size();++j)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(find(end.begin(),end.end(),num[j])==end.end())&#123;   <span class="comment">//同上</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">auto</span> index = find(cover[i].cbegin(),cover[i].cend(),num[j]); <span class="comment">//查找输入值num[j]是否出现在输入值num[i]的所有递推数中，如果出现了，则从结果中把这个数(num[j])删除</span></span><br><span class="line">            <span class="keyword">if</span>(index!=cover[i].end())&#123;</span><br><span class="line">                <span class="comment">//auto I = find(num.begin(),num.end(),*index);</span></span><br><span class="line">                <span class="keyword">auto</span> I = find(end.begin(),end.end(),*index);  <span class="comment">//*index值与num[j]相同</span></span><br><span class="line">                <span class="keyword">if</span>(I!=end.end())&#123;</span><br><span class="line">                    end.erase(I);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(end.rbegin(),end.rend());</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;end.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;end[i];</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1006</title>
      <link href="/2018/10/07/basic-1006/"/>
      <url>/2018/10/07/basic-1006/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vi;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = n%<span class="number">10</span>;</span><br><span class="line">        vi.push_back(temp);</span><br><span class="line">        ++count;</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag = count;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=count<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;vi[i];++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">'B'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">'S'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;j+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1008</title>
      <link href="/2018/10/07/basic-1008/"/>
      <url>/2018/10/07/basic-1008/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,move;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;move;</span><br><span class="line">    <span class="keyword">int</span> nn = n;</span><br><span class="line">    <span class="keyword">if</span>(move&gt;n)&#123;</span><br><span class="line">        move = move%n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">array</span>;</span><br><span class="line">    <span class="keyword">while</span>(nn--)&#123;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">        <span class="built_in">array</span>.push_back(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n-move;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">array</span>[i];</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n-move;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">array</span>[i];</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1009</title>
      <link href="/2018/10/07/basic-1009/"/>
      <url>/2018/10/07/basic-1009/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; str;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s)&#123;</span><br><span class="line">        str.push_back(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> b = str.rbegin();b!=str.rend();++b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;*b;</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1002</title>
      <link href="/2018/10/07/basic-1002/"/>
      <url>/2018/10/07/basic-1002/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; pinyin = &#123;<span class="string">"ling"</span>,<span class="string">"yi"</span>,<span class="string">"er"</span>,<span class="string">"san"</span>,<span class="string">"si"</span>,<span class="string">"wu"</span>,<span class="string">"liu"</span>,<span class="string">"qi"</span>,<span class="string">"ba"</span>,<span class="string">"jiu"</span>&#125;;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; out;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">string</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i!=n.size();++i)&#123;</span><br><span class="line">        sum += <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(n[i]<span class="number">-48</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(sum)&#123;</span><br><span class="line">        out.push_back(sum%<span class="number">10</span>);</span><br><span class="line">        sum /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> b = out.rbegin();b!=out.rend();++b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;pinyin[*b];</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1011</title>
      <link href="/2018/10/07/basic-1011/"/>
      <url>/2018/10/07/basic-1011/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t,count=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> a,b,c;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">        <span class="keyword">if</span>(a+b&gt;c)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;count&lt;&lt;<span class="string">": true"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;count&lt;&lt;<span class="string">": false"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1012</title>
      <link href="/2018/10/07/basic-1012/"/>
      <url>/2018/10/07/basic-1012/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; sort_num;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; a=&#123;<span class="number">0.0</span>,<span class="number">0.0</span>,<span class="number">0.0</span>,<span class="number">0.0</span>,<span class="number">0.0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">        sort_num.push_back(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>,count2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;sort_num.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(sort_num[i]%<span class="number">10</span>==<span class="number">0</span>)&#123;   <span class="comment">//a1</span></span><br><span class="line">            a[<span class="number">0</span>]+=sort_num[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sort_num[i]%<span class="number">5</span>==<span class="number">1</span>)&#123;    <span class="comment">//a2</span></span><br><span class="line">            a[<span class="number">1</span>]+=sort_num[i]*<span class="built_in">pow</span>(<span class="number">-1</span>,count2);</span><br><span class="line">            ++count2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sort_num[i]%<span class="number">5</span>==<span class="number">2</span>)&#123;    <span class="comment">//a3</span></span><br><span class="line">            a[<span class="number">2</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sort_num[i]%<span class="number">5</span>==<span class="number">3</span>)&#123;    <span class="comment">//a4</span></span><br><span class="line">            a[<span class="number">3</span>]+=sort_num[i];</span><br><span class="line">            ++count;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sort_num[i]%<span class="number">5</span>==<span class="number">4</span>)&#123;    <span class="comment">//a5</span></span><br><span class="line">            <span class="keyword">if</span>(a[<span class="number">4</span>]&lt;sort_num[i])&#123;</span><br><span class="line">                a[<span class="number">4</span>] = sort_num[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count)&#123;  <span class="comment">//避免产生除0错误</span></span><br><span class="line">        a[<span class="number">3</span>] = a[<span class="number">3</span>]/count;</span><br><span class="line">    &#125;</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i =<span class="number">0</span>;i!=a.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">0</span>&amp;&amp;i==<span class="number">1</span>)&#123;    <span class="comment">//处理a2的情况，避免各个数字相加和为0却输出了N</span></span><br><span class="line">            <span class="keyword">if</span>(count2!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"N"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"N"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%.1f"</span>,a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1016</title>
      <link href="/2018/10/07/basic-1016/"/>
      <url>/2018/10/07/basic-1016/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> a,b,pa=<span class="string">""</span>,pb=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">char</span> da,db;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;da&gt;&gt;b&gt;&gt;db;</span><br><span class="line">    <span class="keyword">int</span> na=<span class="number">0</span>,nb=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;item:a)&#123;</span><br><span class="line">        <span class="keyword">if</span>(item == da)&#123;</span><br><span class="line">            pa+=da;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;item:b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(item == db)&#123;</span><br><span class="line">            pb+=db;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pa==<span class="string">""</span>)&#123;</span><br><span class="line">        pa+=<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pb==<span class="string">""</span>)&#123;</span><br><span class="line">        pb+=<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;stoi(pa)+stoi(pb);</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1056</title>
      <link href="/2018/10/07/basic-1056/"/>
      <url>/2018/10/07/basic-1056/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; total;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">        total.push_back(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;total.size();++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">size_t</span> j=<span class="number">0</span>;j&lt;total.size();++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=j)&#123;</span><br><span class="line">            sum+=total[i]*<span class="number">10</span>+total[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1021</title>
      <link href="/2018/10/07/basic-1021/"/>
      <url>/2018/10/07/basic-1021/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; count = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;item:str)&#123;</span><br><span class="line">        count[item-<span class="string">'0'</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;count.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count[i]!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">":"</span>&lt;&lt;count[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>git学习笔记</title>
      <link href="/2018/10/07/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/10/07/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>##初始化仓库</p><p><strong>git init &lt;dir_name&gt;</strong>   在文件夹中创建一个dir作为git版本库，dir_name可省略，此时默认将当前所在文件初始化为版本库。</p><p><strong>git log</strong> 查看历史记录，添加 –pretty=oneline 参数使得记录内容缩减为commit id和commit注释。</p><p><strong>git reset –hard HEAD^</strong>  回退到上一个版本，^表示回退的版本的数量，回退版本过多可以用~number代替，也可以用git log查找commit id，然后选择具体的id进行回退</p><p>##追踪修改，提交版本，查看不同</p><p><strong>git add &lt;file_name&gt;</strong> 将对working(工作区)中的file的修改添加到stage(暂存区)中。</p><p>git commit -m “说明（英文不会）” 将stage中的改动提交到repo(版本库)中。值得注意的是，commit是commit stage中的内容，如果不把working中的内容add到stage中，working中的修改就无法被commit到repo中。</p><p>当对某个或某些文件进行修改过后，先将修改的file add到stage中，然后将stage commit到repo中，也可以用git commit -a 两步并作一步，一步到位。</p><p><strong>git status</strong> 查看working当前状态(与上一次commit后的repo相比)。</p><p><strong>git diff</strong> 比较working和stage之间的差异，具体来说是跟最近一次add之后的stage相比，working发生了哪些变化，两次commit之间可以有多次add命令。因此如果一次性将所有修改都add到stage中，会出现git diff后啥也没有的情况。</p><p><strong>git diff –cached</strong> 比较stage和repo之间的差异。</p><p><strong>git diff HEAD – &lt;file_name&gt;</strong>  直接将working的file和repo的file相比。</p><p>##撤销修改</p><p><strong>git checkout – &lt;file_name&gt;</strong> 如果你还没有把修改add到stage中，此命令可以将working中对file的修改撤回到与最近一次commit后repo中的file相同的状态(反正你也没add，其实手动修改就行，没必要用这个命令，还有可能把不想改的东西改掉，但是如果你瞎jb改，自己都忘了改了哪些地方了，这个命令就派上用场了)。如果你已经把修改add到stage了，在此之后又做了修改，那么此命令可以把file撤回到与stage相同的状态。</p><p><strong>git reset HEAD &lt;file_name&gt;</strong>  可以把file在stage中的修改取消，也就是说可以撤销对file的add命令</p><p>上面两个命令后先时候可以把对某个file的修改从stage中撤销，并且把该file撤回到最近的repo状态。</p><p>##删除文件</p><p><strong>git rm</strong> 如果你想从版本库中把某文件删了，那么你就先用这个命令，然后commit，文件就从working和repo中同时被删除了。</p><p>如果你手一抖删错了，可以用git checkout – filename 将该文件还原，不过要注意，这一命令实际上使用repo或stage中(具体要看你有没有把修改add到stage中，参见上文)的文件替换working中的文件，也就是说，如果你在某次commit后对file做了修改，手抖之前没有add/commit，那么你对该文件的最新修改就没了。</p><p>如果你手抖把版本库的也删了，那你就得回退版本了，用git reset HEAD^回退上一个版本，然后再用checkout。</p><p>##分支管理<br>HEAD指向master，master指向最新的提交</p><p><strong>git branch</strong> 查看所有分支</p><p><strong>git branch new_branch; gitcheckout new_branch</strong> 创建一个分支new_branch，然后切换到该分支</p><p><strong>git checkout -b branch-name origin/branch-name</strong> 在本地创建和远程分支对应的分支，在本地新建的branch，如果没有推送到远程repo，那么该branch对从远程repo中clone的人来说就是不可见的。</p><p><strong>git branch -d</strong> 删除指定分支</p><p><strong>git checkout -b new_branch</strong> 上述两条命令可以用这条命令代替，即checkout加一个b参数</p><p><strong>git merge</strong> 制定分支合并到当前分支上</p><p><strong>git stash</strong> 将当前的working保存，等到合适的时候再重新读档。 竟然可以在branch1上stash，然后在branch2上pop…搞不懂</p><p><strong>git stash list</strong> 列出所有存档</p><p><strong>git stash apply; git stash drop</strong> 恢复后删除某分支，或者直接用 <strong>git stash pop</strong> 一步到位</p><p>##解决冲突</p><p>用git pull把远程库上的最新的提交从你要push的分支上拉下来，然后在本地合并，解决冲突，然后再推送，从远程repo拉下来之后会自动尝试合并。本质上和merge两个branch差不多，即在要合并的branch上解决冲突，然后merge。<strong>但是在pull之前，要先用 <strong>git branch –set-upstream-to=origin/branch branch</strong> 命令制定本地branch和远程origin/branch的联系，设置链接,如果提示no tracking information，则说明链接关系未创建</strong>。</p><p>##标签管理</p><p><strong>git tag</strong> 用git checkout 切换到某一分支上，然后用该命令打标签，标签按字母排序。标签总是和commit联系在一起，在不带commit id的情况下，标签默认和最新的commit挂钩，我们也可以手动指定标签与某一commit id挂钩。<br>还可以创建带有说明的标签，用-a指定标签名，-m指定说明文字。<br>不带任何参数可以查看所有标签</p><p><strong>git push origin &lt;tag_name&gt;</strong> 创建的标签都默认只储存在本地，可以使用该命令将标签推送到远程repo，或者用<strong>–tags</strong>参数一次性把所有尚未推送的标签都推送到远程repo。</p><p><strong>git tag -d</strong> 从本地删除标签<br><strong>git push origin :ref/tags/tag_name</strong> 从远程repo删除标签。 </p>]]></content>
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>开端</title>
      <link href="/2018/09/02/%E5%BC%80%E7%AB%AF/"/>
      <url>/2018/09/02/%E5%BC%80%E7%AB%AF/</url>
      <content type="html"><![CDATA[<p>此博客建立于2018年8月26日</p><p>其实两年前就有建一个博客的打算，期间也尝试过印象笔记等平台，但是由于当时太懒，再加上没有什么写博客的动力，所以就一直拖拖拖。最近趁着暑假还剩最后几天，赶紧找找网上的教程把博客建了。</p><p>现在是2018年9月2日晚上九点，明天就开学了，本来想着把心里的一些想法在博客上表达出来，觉得有很多想说的，但是真到开始写了又觉得没啥好写的哈哈，想到哪写到哪吧，文笔也不好，建站之初流量也不多，如果您能够在建站之初就看见我的第一篇博客也算咱们有缘。</p><p>这个博客主要是想记录我的学习历程，技术分享，读书和观影心得，以及一些矫情的随笔。</p><p>主要还是以技术分享为主，毕竟我的本意是把这个博客建成一个技术博客，辅之以生活的记录，一方面是记录我的学习之路，帮助自己理解和记忆学到的东西。而且把自己遇到的问题和解决方法记录下来，以后再遇到类似的问题也不用满世界搜索解决方法了，顺便能提升一下自己的语言组织能力和写作能力，另一方面如果真的能帮的到人的话倒也挺好的。</p><p>其实还有一点，那就是看别人写的技术博客就觉得很厉害，就有些手痒，希望自己也能写出这么厉害的东西。</p><p>嗯，我初步的想法是尽量做到每个月三到四篇技术博客的分享，不过由于我目前还是个弱鸡，最近才刚开始学C++，也谈不上什么技术，初期还是以学习记录和我自己对书本的理解为主，希望不久的将来我能够真正做到写一些能够称得上技术分享的文章。</p><p>另外就是一些读书/观影的心得和日常随笔了，因为我发现我总喜欢在同样的事情上耗费无意义的时间，用人话来说就是总喜欢反复纠结同样的事情，我想与其这样浪费时间，不如把心中想的写下来，而写下来的东西对于以后的我来说，不管是警示也好，回忆也好，总不至于再浪费更多的无意义的时间。</p><p>暂时就这么多吧</p><p>lby<br>2018年9月2日于学校宿舍</p>]]></content>
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 心情记录 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
