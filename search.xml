<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>basic-1064</title>
      <link href="/2018/10/24/basic-1064/"/>
      <url>/2018/10/24/basic-1064/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,v[<span class="number">37</span>]=&#123;<span class="number">0</span>&#125;,count=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a,x=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">        <span class="keyword">while</span>(a)&#123;</span><br><span class="line">            x+=a%<span class="number">10</span>;</span><br><span class="line">            a/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        v[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">37</span>;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(v[i]&gt;<span class="number">0</span>)</span><br><span class="line">            count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;count&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">37</span>;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(v[i]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!f==<span class="number">0</span>)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i;</span><br><span class="line">            f++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1063</title>
      <link href="/2018/10/24/basic-1063/"/>
      <url>/2018/10/24/basic-1063/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">double</span> max;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">double</span> c;</span><br><span class="line">        c = <span class="built_in">sqrt</span>(a*a+b*b);</span><br><span class="line">        <span class="keyword">if</span>(max&lt;c)</span><br><span class="line">            max=c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2f"</span>,max);</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1069</title>
      <link href="/2018/10/24/basic-1069/"/>
      <url>/2018/10/24/basic-1069/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,n,s;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; name;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n&gt;&gt;s;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">1</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="built_in">string</span> str;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">        <span class="keyword">if</span>(count&lt;s)&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(j%n==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">auto</span> flag = find(name.begin(),name.end(),str);</span><br><span class="line">                <span class="keyword">if</span>(flag==name.end())&#123;</span><br><span class="line">                    name.push_back(str);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    j--; <span class="comment">//如果有人已经出现在转发名单里，则跳过这个人，并且把之后多+1的间隔减掉，相当于这个人不存在</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            j++;    <span class="comment">//间隔+1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!name.size())&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Keep going..."</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> item:name)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;item&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1082</title>
      <link href="/2018/10/24/basic-1082/"/>
      <url>/2018/10/24/basic-1082/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">double</span> max=<span class="number">0</span>,min=<span class="number">100</span>*<span class="number">100</span>;</span><br><span class="line">    <span class="built_in">string</span> ma,mi;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">string</span> a;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        <span class="keyword">double</span> dis;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        dis = <span class="built_in">sqrt</span>(x*x+y*y);</span><br><span class="line">        <span class="keyword">if</span>(max&lt;dis)&#123;</span><br><span class="line">            max = dis;</span><br><span class="line">            ma=a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(min&gt;dis)&#123;</span><br><span class="line">            min = dis;</span><br><span class="line">            mi = a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;mi&lt;&lt;<span class="string">" "</span>&lt;&lt;ma;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1067</title>
      <link href="/2018/10/24/basic-1067/"/>
      <url>/2018/10/24/basic-1067/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> in,s;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;in&gt;&gt;n;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        getline(<span class="built_in">cin</span>,s);</span><br><span class="line">        <span class="keyword">if</span>(s==<span class="string">"#"</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s==in)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Welcome in"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s!=in)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Wrong password: "</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Account locked"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1062</title>
      <link href="/2018/10/24/basic-1062/"/>
      <url>/2018/10/24/basic-1062/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> Gcd(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> n1,m1,n2,m2,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf/%lf %lf/%lf %lf"</span>,&amp;n1,&amp;m1,&amp;n2,&amp;m2,&amp;k);</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">double</span> i=<span class="number">1</span>;i&lt;=k;++i)&#123;</span><br><span class="line">        <span class="keyword">double</span> a=i/k,b=n1/m1,c=n2/m2;</span><br><span class="line">        <span class="keyword">if</span>((b&lt;a&amp;&amp;a&lt;c)||(c&lt;a&amp;&amp;a&lt;b))&#123;</span><br><span class="line">            <span class="keyword">if</span>(Gcd(<span class="keyword">int</span>(i),<span class="keyword">int</span>(k))==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!count==<span class="number">0</span>)</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">"/"</span>&lt;&lt;k;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1077</title>
      <link href="/2018/10/24/basic-1077/"/>
      <url>/2018/10/24/basic-1077/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">int</span> temp=n;</span><br><span class="line">    <span class="keyword">while</span>(temp--)&#123;</span><br><span class="line">        <span class="keyword">int</span> te,sum=<span class="number">0</span>,max=<span class="number">0</span>,min=<span class="number">100</span>,count=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;te;</span><br><span class="line">        <span class="keyword">int</span> nn=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(nn--)&#123;</span><br><span class="line">            <span class="keyword">int</span> stu;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;stu;</span><br><span class="line">            <span class="keyword">if</span>(stu&gt;=<span class="number">0</span>&amp;&amp;stu&lt;=m)&#123;</span><br><span class="line">                sum+=stu;</span><br><span class="line">                <span class="keyword">if</span>(max&lt;stu)</span><br><span class="line">                    max=stu;</span><br><span class="line">                <span class="keyword">if</span>(min&gt;stu)</span><br><span class="line">                    min=stu;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sum = (sum-min-max)/(count<span class="number">-2</span>);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="keyword">int</span>((sum+te+<span class="number">1</span>)/<span class="number">2</span>)&lt;&lt;<span class="built_in">endl</span>;  <span class="comment">//多加一个1来四舍五入</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1057</title>
      <link href="/2018/10/24/basic-1057/"/>
      <url>/2018/10/24/basic-1057/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    getline(<span class="built_in">cin</span>,s);  <span class="comment">//老生常谈</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;s.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(s[i]))&#123;</span><br><span class="line">            s[i]=<span class="built_in">tolower</span>(s[i]);</span><br><span class="line">            sum+=s[i]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> one=<span class="number">0</span>,zero=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(sum)&#123;</span><br><span class="line">        <span class="keyword">if</span>(sum%<span class="number">2</span>)</span><br><span class="line">            one++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            zero++;</span><br><span class="line">        sum/=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;zero&lt;&lt;<span class="string">" "</span>&lt;&lt;one;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1053</title>
      <link href="/2018/10/24/basic-1053/"/>
      <url>/2018/10/24/basic-1053/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;     <span class="comment">//注意e和E要定义为double</span></span><br><span class="line">    <span class="keyword">int</span> n,d;</span><br><span class="line">    <span class="keyword">double</span> e;</span><br><span class="line">    <span class="keyword">double</span> maybe=<span class="number">0</span>,must=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;e&gt;&gt;d;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;n&lt;&lt;" "&lt;&lt;e&lt;&lt;" "&lt;&lt;d&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">int</span> temp=n;</span><br><span class="line">    <span class="keyword">while</span>(temp--)&#123;</span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">        <span class="keyword">int</span> t=k;</span><br><span class="line">        <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;k&lt;&lt;" ";</span></span><br><span class="line">            <span class="keyword">double</span> E;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;E;</span><br><span class="line">            <span class="keyword">if</span>(E&lt;e)</span><br><span class="line">                count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(count&gt;k/<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(k&lt;=d)</span><br><span class="line">                maybe++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                must++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    maybe = maybe/n;</span><br><span class="line">    must = must/n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.1f%% %.1f%%"</span>,maybe*<span class="number">100</span>,must*<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1054</title>
      <link href="/2018/10/22/basic-1054/"/>
      <url>/2018/10/22/basic-1054/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">double</span> avg=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> total=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vs;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">string</span> s;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">        vs.push_back(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vs.size();++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> index=vs[i].size();</span><br><span class="line">        <span class="keyword">for</span>(;j&lt;vs[i].size();++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(vs[i][j]==<span class="string">'.'</span>)&#123;</span><br><span class="line">                count++;</span><br><span class="line">                index = j;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(count&gt;<span class="number">1</span>)&#123;      <span class="comment">//小数点不能多于两个</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"ERROR: "</span>&lt;&lt;vs[i]&lt;&lt;<span class="string">" is not a legal number"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(vs[i].size()-index&gt;<span class="number">3</span>)&#123;   <span class="comment">//不能超过小数点后两位</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"ERROR: "</span>&lt;&lt;vs[i]&lt;&lt;<span class="string">" is not a legal number"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>( !((vs[i][j]&gt;=<span class="string">'0'</span>&amp;&amp;vs[i][j]&lt;=<span class="string">'9'</span>)||vs[i][j]==<span class="string">'.'</span>||vs[i][j]==<span class="string">'-'</span>)) &#123;   <span class="comment">//不能是数字,'.','-'之外的字符</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"ERROR: "</span>&lt;&lt;vs[i]&lt;&lt;<span class="string">" is not a legal number"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j!=vs[i].size())&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(stod(vs[i])&gt;<span class="number">1000</span>||stod(vs[i])&lt;<span class="number">-1000</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"ERROR: "</span>&lt;&lt;vs[i]&lt;&lt;<span class="string">" is not a legal number"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        avg+=stod(vs[i]);</span><br><span class="line">        total++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(total==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"The average of 0 numbers is Undefined"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(total==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The average of 1 number is %.2f"</span>,avg/total);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The average of %d numbers is %.2f"</span>,total,avg/total);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1052</title>
      <link href="/2018/10/22/basic-1052/"/>
      <url>/2018/10/22/basic-1052/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> a,<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> c=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;a&amp;&amp;b&lt;s.size())&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[b++]==<span class="string">'['</span>)</span><br><span class="line">            c++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(c&lt;a&amp;&amp;b==s.size())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">choose</span><span class="params">(<span class="keyword">int</span> a,<span class="built_in">string</span> s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;a&amp;&amp;b&lt;s.size())&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[b++]==<span class="string">'['</span>)</span><br><span class="line">            c++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(c&lt;a&amp;&amp;b==s.size())</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> e=b;</span><br><span class="line">    <span class="keyword">while</span>(s[e++]!=<span class="string">']'</span>);  <span class="comment">//[b,e]</span></span><br><span class="line">    <span class="keyword">for</span>(;b&lt;e<span class="number">-1</span>;++b)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s[b];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> hand,eye,mouth;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    getline(<span class="built_in">cin</span>,hand);</span><br><span class="line">    getline(<span class="built_in">cin</span>,eye);</span><br><span class="line">    getline(<span class="built_in">cin</span>,mouth);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a[<span class="number">5</span>];</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[<span class="number">0</span>]&gt;&gt;a[<span class="number">1</span>]&gt;&gt;a[<span class="number">2</span>]&gt;&gt;a[<span class="number">3</span>]&gt;&gt;a[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">if</span>(judge(a[<span class="number">0</span>],hand)&amp;&amp;judge(a[<span class="number">1</span>],eye)&amp;&amp;judge(a[<span class="number">2</span>],mouth)&amp;&amp;judge(a[<span class="number">3</span>],eye)&amp;&amp;judge(a[<span class="number">4</span>],hand))&#123;</span><br><span class="line">            choose(a[<span class="number">0</span>],hand);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"("</span>;</span><br><span class="line">            choose(a[<span class="number">1</span>],eye);</span><br><span class="line">            choose(a[<span class="number">2</span>],mouth);</span><br><span class="line">            choose(a[<span class="number">3</span>],eye);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">")"</span>;</span><br><span class="line">            choose(a[<span class="number">4</span>],hand);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Are you kidding me? @\\/@"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1048</title>
      <link href="/2018/10/22/basic-1048/"/>
      <url>/2018/10/22/basic-1048/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> a,b;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">size_t</span> i,j;</span><br><span class="line">    <span class="keyword">if</span>(a.size()&lt;b.size())&#123;</span><br><span class="line">        <span class="keyword">while</span>(a.size()!=b.size()) a.insert(a.begin(),<span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(a.size()!=b.size()) b.insert(b.begin(),<span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    reverse(a.begin(),a.end());</span><br><span class="line">    reverse(b.begin(),b.end());</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>,j=<span class="number">0</span>;i&lt;a.size()&amp;&amp;j&lt;b.size();++i,++j)&#123;</span><br><span class="line">        <span class="keyword">if</span>((i+<span class="number">1</span>)%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">auto</span> n=(a[i]-<span class="string">'0'</span>+b[j]-<span class="string">'0'</span>)%<span class="number">13</span>;</span><br><span class="line">            <span class="keyword">switch</span>(n)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">10</span>: s.push_back(<span class="string">'J'</span>);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">11</span>: s.push_back(<span class="string">'Q'</span>);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">12</span>: s.push_back(<span class="string">'K'</span>);<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>: s.push_back(n+<span class="string">'0'</span>);<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">auto</span> n=b[j]-a[i];</span><br><span class="line">            <span class="keyword">if</span>(n&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                n+=<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            s.push_back(n+<span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=b.size()<span class="number">-1</span>;i&gt;=j;--i)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> b=s.rbegin();b!=s.rend();++b)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;*b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1049</title>
      <link href="/2018/10/22/basic-1049/"/>
      <url>/2018/10/22/basic-1049/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> temp=n;</span><br><span class="line">    <span class="keyword">while</span>(temp--)&#123;</span><br><span class="line">        <span class="keyword">double</span> a;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">        s.push_back(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">/*for(int i=1;i&lt;=n;++i)&#123;    //三层循环，妥妥地超时了</span></span><br><span class="line"><span class="comment">        int c=0;</span></span><br><span class="line"><span class="comment">        for(int j=0;j&lt;n-i+1;++j)&#123;</span></span><br><span class="line"><span class="comment">            int k=j;</span></span><br><span class="line"><span class="comment">            while( (c++&lt;i)&amp;&amp;(k&lt;n) ) </span></span><br><span class="line"><span class="comment">                sum+=s[k++];</span></span><br><span class="line"><span class="comment">            c=0;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">double</span> d=n<span class="number">-2</span>;  <span class="comment">//必须用double,用int会溢出</span></span><br><span class="line">    <span class="keyword">double</span> a=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();++i,d-=<span class="number">2</span>)&#123;</span><br><span class="line">        sum+=a*s[i];</span><br><span class="line">        a+=d;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2f"</span>,sum);</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1024</title>
      <link href="/2018/10/19/basic-1024/"/>
      <url>/2018/10/19/basic-1024/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">    <span class="keyword">int</span> j,k;</span><br><span class="line">    <span class="keyword">char</span> fuhao1=s[<span class="number">0</span>];</span><br><span class="line">    s.erase(s.begin());</span><br><span class="line">    <span class="keyword">auto</span> E = s.find(<span class="string">'E'</span>);</span><br><span class="line">    <span class="keyword">char</span> fuhao2 = s[E+<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">string</span> first,second;</span><br><span class="line">    first = s.substr(<span class="number">0</span>,E);</span><br><span class="line">    second = s.substr(E+<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(fuhao1==<span class="string">'-'</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;fuhao1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(fuhao2==<span class="string">'+'</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(first.size()<span class="number">-2</span>&lt;=stoi(second))&#123;</span><br><span class="line">            <span class="keyword">if</span>(first[<span class="number">0</span>]!=<span class="string">'0'</span>) <span class="built_in">cout</span>&lt;&lt;first[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">2</span>;i&lt;first.size();++i) <span class="built_in">cout</span>&lt;&lt;first[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;stoi(second)-first.size()+<span class="number">2</span>;++i) <span class="built_in">cout</span>&lt;&lt;<span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">double</span> result;</span><br><span class="line">            result = stod(first)*<span class="built_in">pow</span>(<span class="number">10</span>,stoi(second));</span><br><span class="line">            <span class="built_in">cout</span>.precision(first.size()<span class="number">-2</span>-stoi(second));</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        first.erase((first.begin()+<span class="number">1</span>)); <span class="comment">//把小数点移走</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;stoi(second);++i)&#123;</span><br><span class="line">            first.insert(first.begin(),<span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        first.insert((first.begin()+<span class="number">1</span>),<span class="string">'.'</span>);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;first;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1028</title>
      <link href="/2018/10/19/basic-1028/"/>
      <url>/2018/10/19/basic-1028/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">human</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> y,m,d;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(human a,human b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ya = a.y,yb = b.y;</span><br><span class="line">    <span class="keyword">int</span> ma = a.m,mb = b.m;</span><br><span class="line">    <span class="keyword">int</span> da = a.d,db = b.d;</span><br><span class="line">    <span class="keyword">if</span>(ya!=yb)&#123;</span><br><span class="line">        <span class="keyword">return</span> ya&gt;yb;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ma!=mb)&#123;</span><br><span class="line">            <span class="keyword">return</span> ma&gt;mb;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> da&gt;db;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> y,<span class="keyword">int</span> m,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(y&gt;<span class="number">2014</span>||y&lt;<span class="number">1814</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(y==<span class="number">2014</span>||y==<span class="number">1814</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(y==<span class="number">2014</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(m&gt;<span class="number">9</span>||(m==<span class="number">9</span>&amp;&amp;d&gt;<span class="number">6</span>))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(y==<span class="number">1814</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(m&lt;<span class="number">9</span>||(m==<span class="number">9</span>&amp;&amp;d&lt;<span class="number">6</span>))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;human&gt; m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        human h;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;h.name;<span class="comment">//&gt;&gt;h.y&gt;&gt;h.m&gt;&gt;h.d;</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d/%d/%d"</span>,&amp;h.y,&amp;h.m,&amp;h.d);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(!judge(h.y,h.m,h.d))&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        m.push_back(h);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(m.begin(),m.end(),cmp);  <span class="comment">//降序</span></span><br><span class="line">    <span class="keyword">if</span>(m.size())</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;m.size()&lt;&lt;<span class="string">" "</span>&lt;&lt;m[m.size()<span class="number">-1</span>].name&lt;&lt;<span class="string">" "</span>&lt;&lt;m[<span class="number">0</span>].name;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;m.size();</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1029</title>
      <link href="/2018/10/19/basic-1029/"/>
      <url>/2018/10/19/basic-1029/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> in,out;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">char</span>&gt; a;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;in&gt;&gt;out;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;in.size();++i)&#123;</span><br><span class="line">        <span class="keyword">auto</span> s = out.find(in[i]);</span><br><span class="line">        <span class="keyword">if</span>(s==out.npos)&#123;</span><br><span class="line">            <span class="keyword">if</span>(in[i]&gt;=<span class="string">'a'</span>&amp;&amp;in[i]&lt;=<span class="string">'z'</span>)&#123;</span><br><span class="line">                in[i]=<span class="built_in">toupper</span>(in[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">auto</span> index = find(a.begin(),a.end(),in[i]);</span><br><span class="line">            <span class="keyword">if</span>(index==a.end())</span><br><span class="line">                a.push_back(in[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> item:a)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1032</title>
      <link href="/2018/10/19/basic-1032/"/>
      <url>/2018/10/19/basic-1032/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; total(<span class="number">100001</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        total[a]+=b;</span><br><span class="line">        <span class="keyword">if</span>(total[max]&lt;total[a])&#123;</span><br><span class="line">            max = a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d"</span>,max,total[max]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1047</title>
      <link href="/2018/10/19/basic-1047/"/>
      <url>/2018/10/19/basic-1047/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; grade(<span class="number">1001</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d-%d %d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">        grade[a]+=c;</span><br><span class="line">        <span class="keyword">if</span>(grade[max]&lt;grade[a])</span><br><span class="line">            max=a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;max&lt;&lt;<span class="string">" "</span>&lt;&lt;grade[max];</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1033</title>
      <link href="/2018/10/19/basic-1033/"/>
      <url>/2018/10/19/basic-1033/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> bad,in;</span><br><span class="line">    getline(<span class="built_in">cin</span>,bad);  <span class="comment">//输入有可能是空行，即没有键位损坏，测试点2</span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;in;</span><br><span class="line">    <span class="keyword">int</span> plus = bad.find(<span class="string">'+'</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;in.size();++i)&#123;</span><br><span class="line">        <span class="keyword">char</span> c = in[i];</span><br><span class="line">        <span class="keyword">if</span>(plus!=bad.npos)&#123;   <span class="comment">//如果上档件坏了,直接跳过大写字母</span></span><br><span class="line">            <span class="keyword">if</span>(c&gt;=<span class="string">'A'</span>&amp;&amp;c&lt;=<span class="string">'Z'</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c&gt;=<span class="string">'a'</span>&amp;&amp;c&lt;=<span class="string">'z'</span>)&#123;    <span class="comment">//将小写转成大写再判断</span></span><br><span class="line">            c=<span class="built_in">toupper</span>(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">auto</span> index = bad.find(c); </span><br><span class="line">        <span class="keyword">if</span>(index==bad.npos)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;in[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1038</title>
      <link href="/2018/10/19/basic-1038/"/>
      <url>/2018/10/19/basic-1038/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; grade(<span class="number">101</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> g;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;g;</span><br><span class="line">        grade[g]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(k--)&#123;</span><br><span class="line">        <span class="keyword">int</span> g;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;g;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;grade[g];</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1034</title>
      <link href="/2018/10/19/basic-1034/"/>
      <url>/2018/10/19/basic-1034/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最开始的想法太蠢了，还是在想分情况一个一个处理，没想过直接推公式按公式写，写的又臭又长</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">first</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a1,<span class="keyword">long</span> <span class="keyword">long</span> a2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a2==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Inf"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a1&gt;<span class="number">0</span>&amp;&amp;a2&lt;<span class="number">0</span>)&#123; <span class="comment">//将分母的负号换到分子上</span></span><br><span class="line">        a1=-a1;</span><br><span class="line">        a2=-a2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x=<span class="built_in">abs</span>(a1),y=<span class="built_in">abs</span>(a2),m = y;       <span class="comment">//求a1和a2的最大公约数</span></span><br><span class="line">    <span class="keyword">while</span>(x%y!=<span class="number">0</span>)&#123;</span><br><span class="line">        m=x%y;</span><br><span class="line">        x=y;</span><br><span class="line">        y=m;</span><br><span class="line">    &#125;</span><br><span class="line">    a1/=y,a2/=y;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> zheng1;</span><br><span class="line">    zheng1 = a1/a2; </span><br><span class="line">    <span class="keyword">if</span>(zheng1!=<span class="number">0</span>)&#123;</span><br><span class="line">        a1 = <span class="built_in">abs</span>(a1)%a2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        a1 = a1%a2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(zheng1&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a1==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"("</span>&lt;&lt;zheng1&lt;&lt;<span class="string">")"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"("</span>&lt;&lt;zheng1&lt;&lt;<span class="string">" "</span>&lt;&lt;a1&lt;&lt;<span class="string">"/"</span>&lt;&lt;a2&lt;&lt;<span class="string">")"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(zheng1==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a1==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a1&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a1&lt;&lt;<span class="string">"/"</span>&lt;&lt;a2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"("</span>&lt;&lt;a1&lt;&lt;<span class="string">"/"</span>&lt;&lt;a2&lt;&lt;<span class="string">")"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(zheng1&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a1==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;zheng1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;zheng1&lt;&lt;<span class="string">" "</span>&lt;&lt;a1&lt;&lt;<span class="string">"/"</span>&lt;&lt;a2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a1,<span class="keyword">long</span> <span class="keyword">long</span> a2,<span class="keyword">long</span> <span class="keyword">long</span> b1,<span class="keyword">long</span> <span class="keyword">long</span> b2,<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> zheng1,zheng2;</span><br><span class="line">    zheng1 = a1/a2; <span class="keyword">long</span> <span class="keyword">long</span> aa1 = <span class="built_in">abs</span>(a1)%a2;</span><br><span class="line">    zheng2 = b1/b2; <span class="keyword">long</span> <span class="keyword">long</span> bb1 = <span class="built_in">abs</span>(b1)%b2;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(c==<span class="string">'+'</span>)&#123;</span><br><span class="line">        first(a1,a2);<span class="built_in">cout</span>&lt;&lt;<span class="string">" + "</span>;first(b1,b2);<span class="built_in">cout</span>&lt;&lt;<span class="string">" = "</span>;first(a1*b2+a2*b1,a2*b2);<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'-'</span>)&#123;</span><br><span class="line">        first(a1,a2);<span class="built_in">cout</span>&lt;&lt;<span class="string">" - "</span>;first(b1,b2);<span class="built_in">cout</span>&lt;&lt;<span class="string">" = "</span>;first(a1*b2-a2*b1,a2*b2);<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'*'</span>)&#123;</span><br><span class="line">        first(a1,a2);<span class="built_in">cout</span>&lt;&lt;<span class="string">" * "</span>;first(b1,b2);<span class="built_in">cout</span>&lt;&lt;<span class="string">" = "</span>;first(a1*b1,a2*b2);<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">'/'</span>)&#123;</span><br><span class="line">        first(a1,a2);<span class="built_in">cout</span>&lt;&lt;<span class="string">" / "</span>;first(b1,b2);<span class="built_in">cout</span>&lt;&lt;<span class="string">" = "</span>;first(a1*b2,a2*b1);<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> a1,a2,b1,b2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld/%lld %lld/%lld"</span>,&amp;a1,&amp;a2,&amp;b1,&amp;b2);</span><br><span class="line">    </span><br><span class="line">    cal(a1,a2,b1,b2,<span class="string">'+'</span>);</span><br><span class="line">    cal(a1,a2,b1,b2,<span class="string">'-'</span>);</span><br><span class="line">    cal(a1,a2,b1,b2,<span class="string">'*'</span>);</span><br><span class="line">    cal(a1,a2,b1,b2,<span class="string">'/'</span>);</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1042</title>
      <link href="/2018/10/19/basic-1042/"/>
      <url>/2018/10/19/basic-1042/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">26</span>]=&#123;<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>,<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>&#125;;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; count(<span class="number">26</span>,<span class="number">0</span>);</span><br><span class="line">    getline(<span class="built_in">cin</span>,str);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;str.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isalpha</span>(str[i]))&#123;</span><br><span class="line">            str[i] = <span class="built_in">tolower</span>(str[i]);</span><br><span class="line">            count[str[i]-<span class="string">'a'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;count.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count[i]&gt;count[index])&#123;</span><br><span class="line">            index=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a[index]&lt;&lt;<span class="string">" "</span>&lt;&lt;count[index];</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1076</title>
      <link href="/2018/10/19/basic-1076/"/>
      <url>/2018/10/19/basic-1076/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">string</span> line;</span><br><span class="line">        getline(<span class="built_in">cin</span>,line);</span><br><span class="line">        <span class="keyword">auto</span> index = line.find(<span class="string">'T'</span>);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;line[index<span class="number">-2</span>]-<span class="string">'A'</span>+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1043</title>
      <link href="/2018/10/19/basic-1043/"/>
      <url>/2018/10/19/basic-1043/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; print(<span class="number">6</span>,<span class="number">0</span>);</span><br><span class="line">    getline(<span class="built_in">cin</span>,str);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;str.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i]==<span class="string">'P'</span>)</span><br><span class="line">            print[<span class="number">0</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">'A'</span>)</span><br><span class="line">            print[<span class="number">1</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">'T'</span>)</span><br><span class="line">            print[<span class="number">2</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">'e'</span>)</span><br><span class="line">            print[<span class="number">3</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">'s'</span>)</span><br><span class="line">            print[<span class="number">4</span>]++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">'t'</span>)</span><br><span class="line">            print[<span class="number">5</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//int total = print[0]+print[1]+print[2]+print[3]+print[4]+print[5];</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;print[<span class="number">0</span>]||print[<span class="number">1</span>]||print[<span class="number">2</span>]||print[<span class="number">3</span>]||print[<span class="number">4</span>]||print[<span class="number">5</span>];++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> index = i%<span class="number">6</span>;</span><br><span class="line">        <span class="keyword">if</span>(index==<span class="number">0</span>&amp;&amp;print[<span class="number">0</span>])</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">'P'</span>,print[<span class="number">0</span>]--;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(index==<span class="number">1</span>&amp;&amp;print[<span class="number">1</span>])</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">'A'</span>,print[<span class="number">1</span>]--;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(index==<span class="number">2</span>&amp;&amp;print[<span class="number">2</span>])</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">'T'</span>,print[<span class="number">2</span>]--;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(index==<span class="number">3</span>&amp;&amp;print[<span class="number">3</span>])</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">'e'</span>,print[<span class="number">3</span>]--;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(index==<span class="number">4</span>&amp;&amp;print[<span class="number">4</span>])</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">'s'</span>,print[<span class="number">4</span>]--;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(index==<span class="number">5</span>&amp;&amp;print[<span class="number">5</span>])</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">'t'</span>,print[<span class="number">5</span>]--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1022</title>
      <link href="/2018/10/15/basic-1022/"/>
      <url>/2018/10/15/basic-1022/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,sum;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; sv;</span><br><span class="line">    <span class="comment">//stack&lt;int&gt; ss;</span></span><br><span class="line">    <span class="keyword">int</span> d;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;d;</span><br><span class="line">    sum = a+b;</span><br><span class="line">    <span class="keyword">if</span>(sum==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        getchar();</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(sum)&#123;</span><br><span class="line">        sv.push_back(sum%d);</span><br><span class="line">        <span class="comment">//ss.push(sum%d);</span></span><br><span class="line">        sum = sum/d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> b=sv.rbegin();b!=sv.rend();++b)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;*b;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1051</title>
      <link href="/2018/10/15/basic-1051/"/>
      <url>/2018/10/15/basic-1051/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> r1,p1,r2,p2;</span><br><span class="line">    <span class="keyword">double</span> real,img;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;r1&gt;&gt;p1&gt;&gt;r2&gt;&gt;p2;</span><br><span class="line">    real = (r1*r2)*<span class="built_in">cos</span>(p1+p2);</span><br><span class="line">    img = (r1*r2)*<span class="built_in">sin</span>(p1+p2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (real + <span class="number">0.005</span> &gt;= <span class="number">0</span> &amp;&amp; real &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0.00"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.2f"</span>, real);</span><br><span class="line">    <span class="keyword">if</span>(img &gt;= <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"+%.2fi"</span>, img);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (img + <span class="number">0.005</span> &gt;= <span class="number">0</span> &amp;&amp; img &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"+0.00i"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.2fi"</span>, img);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1086</title>
      <link href="/2018/10/15/basic-1086/"/>
      <url>/2018/10/15/basic-1086/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; dao;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">int</span> ji = a*b;</span><br><span class="line">    <span class="keyword">while</span>(ji)&#123;</span><br><span class="line">        dao.push_back(ji%<span class="number">10</span>);</span><br><span class="line">        ji/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;dao.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dao[i]!=<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(;i&lt;dao.size();++i)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;dao[i];</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1036</title>
      <link href="/2018/10/15/basic-1036/"/>
      <url>/2018/10/15/basic-1036/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;c;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(n+<span class="number">1</span>)/<span class="number">2</span><span class="number">-2</span>;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;c;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(j==n<span class="number">-1</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;c&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;c;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1023</title>
      <link href="/2018/10/15/basic-1023/"/>
      <url>/2018/10/15/basic-1023/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;++i)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; total;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;++i)&#123;</span><br><span class="line">        <span class="keyword">while</span>(a[i]--)&#123;</span><br><span class="line">            total.push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i=total.begin();i!=total.end();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(*i!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;*i;</span><br><span class="line">            total.erase(i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> item:total)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;item;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1026</title>
      <link href="/2018/10/15/basic-1026/"/>
      <url>/2018/10/15/basic-1026/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c1,c2;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> C=<span class="number">100</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;c1&gt;&gt;c2;</span><br><span class="line">    <span class="keyword">int</span> cha=(c2-c1+<span class="number">50</span>)/<span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> h = cha/<span class="number">3600</span>;</span><br><span class="line">    <span class="keyword">int</span> min = (cha%<span class="number">3600</span>)/<span class="number">60</span>;</span><br><span class="line">    <span class="keyword">int</span> sec = (cha%<span class="number">3600</span>)%<span class="number">60</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d"</span>, h, min, sec);</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1027</title>
      <link href="/2018/10/15/basic-1027/"/>
      <url>/2018/10/15/basic-1027/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; n&#123;<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">1000</span>;++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">2</span>*i*i<span class="number">-1</span>;</span><br><span class="line">        n.push_back(num);</span><br><span class="line">        <span class="keyword">if</span>(num&gt;<span class="number">1000</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i,index;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;i&gt;&gt;c;</span><br><span class="line">    <span class="keyword">for</span>(index= <span class="number">0</span>;index&lt;n.size();++index)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n[index]&gt;i)&#123;</span><br><span class="line">            index--;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> yu = i-n[index];   <span class="comment">//n[index]为小于i的最大值</span></span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">2</span>*index+<span class="number">1</span>,<span class="built_in">floor</span>=max,mm=max;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> f=<span class="number">0</span>;f&lt;<span class="built_in">floor</span>;++f)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">0</span>;m&lt;(mm-max)/<span class="number">2</span>;++m)&#123;  <span class="comment">//打印空格</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">0</span>;m&lt;max;++m)&#123;   <span class="comment">//打印字符</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*for(int m=0;m&lt;(mm-max)/2;++m)&#123;  //打印空格,多余的，后面半部分不用打印</span></span><br><span class="line"><span class="comment">            cout&lt;&lt;" ";</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">if</span>(f&lt;<span class="built_in">floor</span>/<span class="number">2</span>)&#123;</span><br><span class="line">            max-=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            max+=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;yu;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1061</title>
      <link href="/2018/10/15/basic-1061/"/>
      <url>/2018/10/15/basic-1061/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; grade,right;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> g;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;g;</span><br><span class="line">        grade.push_back(g);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> r;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;r;</span><br><span class="line">        right.push_back(r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; stu;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">            <span class="keyword">int</span> a;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">            stu.push_back(a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(stu[i]==right[i])&#123;</span><br><span class="line">                sum+=grade[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1081</title>
      <link href="/2018/10/15/basic-1081/"/>
      <url>/2018/10/15/basic-1081/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="built_in">string</span> s0=<span class="string">"Your password is wan mei."</span>,s1=<span class="string">"Your password is tai duan le."</span>,</span><br><span class="line">            s2=<span class="string">"Your password is tai luan le."</span>,s3=<span class="string">"Your password needs shu zi."</span>,</span><br><span class="line">            s4=<span class="string">"Your password needs zi mu."</span>;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>,shuzi=<span class="number">0</span>,zimu=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">string</span> s;</span><br><span class="line">        getline(<span class="built_in">cin</span>,s); <span class="comment">//输入可能会有空格，要用getline()读取</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s.size()&lt;<span class="number">6</span>)&#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!((s[i]&gt;=<span class="string">'a'</span>&amp;&amp;s[i]&lt;=<span class="string">'z'</span>)||(s[i]&gt;=<span class="string">'0'</span>&amp;&amp;s[i]&lt;=<span class="string">'9'</span>)||(s[i]&gt;=<span class="string">'A'</span>&amp;&amp;s[i]&lt;=<span class="string">'Z'</span>)||s[i]==<span class="string">'.'</span>))&#123;</span><br><span class="line">                flag=<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>((s[i]&gt;=<span class="string">'a'</span>&amp;&amp;s[i]&lt;=<span class="string">'z'</span>)||(s[i]&gt;=<span class="string">'A'</span>&amp;&amp;s[i]&lt;=<span class="string">'Z'</span>))&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                zimu=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(s[i]&gt;=<span class="string">'0'</span>&amp;&amp;s[i]&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                shuzi=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag&amp;&amp;flag!=<span class="number">2</span>&amp;&amp;zimu&amp;&amp;(!shuzi))</span><br><span class="line">            flag = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(flag&amp;&amp;flag!=<span class="number">2</span>&amp;&amp;(!zimu)&amp;&amp;shuzi)</span><br><span class="line">            flag = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(flag&amp;&amp;flag!=<span class="number">2</span>&amp;&amp;zimu&amp;&amp;shuzi)</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">'.'</span>)</span><br><span class="line">                count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(count==s.size())</span><br><span class="line">            flag = <span class="number">4</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;s0&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;s1&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="number">2</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;s2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="number">3</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;s3&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(flag==<span class="number">4</span>)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;s4&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1019</title>
      <link href="/2018/10/15/basic-1019/"/>
      <url>/2018/10/15/basic-1019/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">    <span class="keyword">size_t</span> i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(str.size()&lt;<span class="number">4</span>)&#123;</span><br><span class="line">            str.insert(str.begin(),<span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> de=<span class="number">0</span>,in=<span class="number">0</span>;</span><br><span class="line">        sort(rbegin(str),rend(str));</span><br><span class="line">        de = stoi(str);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;str&lt;&lt;<span class="string">" - "</span>;</span><br><span class="line">        </span><br><span class="line">        sort(begin(str),end(str));</span><br><span class="line">        in = stoi(str);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;str&lt;&lt;<span class="string">" = "</span>;</span><br><span class="line">        <span class="keyword">int</span> cha = de - in;</span><br><span class="line">        str = to_string(cha);</span><br><span class="line">        <span class="keyword">while</span>(str.size()&lt;<span class="number">4</span>)&#123;</span><br><span class="line">            str.insert(str.begin(),<span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;str&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">if</span>(cha==<span class="number">6174</span>||cha==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1071</title>
      <link href="/2018/10/15/basic-1071/"/>
      <url>/2018/10/15/basic-1071/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T,k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T&gt;&gt;k;</span><br><span class="line">    <span class="keyword">while</span>(k--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(T==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Game Over."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> n1,b,t,n2;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n1&gt;&gt;b&gt;&gt;t&gt;&gt;n2;</span><br><span class="line">        <span class="keyword">if</span>(t&gt;T)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Not enough tokens. Total = "</span>&lt;&lt;T&lt;&lt;<span class="string">'.'</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n1&gt;n2)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b==<span class="number">0</span>)&#123;</span><br><span class="line">                T+=t;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"Win "</span>&lt;&lt;t&lt;&lt;<span class="string">"! Total = "</span>&lt;&lt;T&lt;&lt;<span class="string">"."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                T-=t;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"Lose "</span>&lt;&lt;t&lt;&lt;<span class="string">". Total = "</span>&lt;&lt;T&lt;&lt;<span class="string">"."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(b==<span class="number">1</span>)&#123;</span><br><span class="line">                T-=t;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"Win "</span>&lt;&lt;t&lt;&lt;<span class="string">"! Total = "</span>&lt;&lt;T&lt;&lt;<span class="string">"."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                T+=t;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"Lose "</span>&lt;&lt;t&lt;&lt;<span class="string">". Total = "</span>&lt;&lt;T&lt;&lt;<span class="string">"."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1066</title>
      <link href="/2018/10/15/basic-1066/"/>
      <url>/2018/10/15/basic-1066/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cout_zero</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!n)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"00"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span>(count)&#123;</span><br><span class="line">        <span class="comment">//case(0): cout&lt;&lt;"000"; break;</span></span><br><span class="line">        <span class="keyword">case</span>(<span class="number">1</span>): <span class="built_in">cout</span>&lt;&lt;<span class="string">"00"</span>;  <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span>(<span class="number">2</span>): <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span> ;  <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span>(<span class="number">3</span>): <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,a,b,gray;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;a&gt;&gt;b&gt;&gt;gray;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; color;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> mm=<span class="number">0</span>;mm&lt;m;++mm)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> nn=<span class="number">0</span>;nn&lt;n;++nn)&#123;</span><br><span class="line">            <span class="keyword">int</span> c;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;c;</span><br><span class="line">            color.push_back(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>,c=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;color.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(c!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        c++;</span><br><span class="line">        count++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(color[i]&gt;=a&amp;&amp;color[i]&lt;=b)&#123;</span><br><span class="line">            cout_zero(gray);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;gray;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout_zero(color[i]);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;color[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(count%m==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            c=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1046</title>
      <link href="/2018/10/15/basic-1046/"/>
      <url>/2018/10/15/basic-1046/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> a1,a2,b1,b2;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a1&gt;&gt;a2&gt;&gt;b1&gt;&gt;b2;</span><br><span class="line">        <span class="keyword">if</span>(a1+b1==a2&amp;&amp;a1+b1!=b2)</span><br><span class="line">            b++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a1+b1==b2&amp;&amp;a1+b1!=a2)</span><br><span class="line">            a++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">" "</span>&lt;&lt;b;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1018</title>
      <link href="/2018/10/11/basic-1018/"/>
      <url>/2018/10/11/basic-1018/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">char</span> a,<span class="keyword">char</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a==b)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">//平局  </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="string">'C'</span>&amp;&amp;b==<span class="string">'J'</span>) <span class="comment">//a石头赢</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;  </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="string">'J'</span>&amp;&amp;b==<span class="string">'B'</span>) <span class="comment">//a剪刀赢</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="string">'B'</span>&amp;&amp;b==<span class="string">'C'</span>) <span class="comment">//a布赢</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(b==<span class="string">'C'</span>&amp;&amp;a==<span class="string">'J'</span>) <span class="comment">//b石头赢</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(b==<span class="string">'J'</span>&amp;&amp;a==<span class="string">'B'</span>) <span class="comment">//b剪刀赢</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">else</span>                    <span class="comment">//b布赢</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">3</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,b[<span class="number">3</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; aw=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,bw=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> g[<span class="number">3</span>]=&#123;<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'J'</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">char</span> x,y;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        <span class="keyword">int</span> judge = cmp(x,y);</span><br><span class="line">        <span class="keyword">if</span>(judge==<span class="number">0</span>)&#123;</span><br><span class="line">            a[<span class="number">1</span>]++;b[<span class="number">1</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(judge&lt;=<span class="number">3</span>)&#123;</span><br><span class="line">            a[<span class="number">0</span>]++;b[<span class="number">2</span>]++;</span><br><span class="line">            aw[judge<span class="number">-1</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            a[<span class="number">2</span>]++;b[<span class="number">0</span>]++;</span><br><span class="line">            bw[judge<span class="number">-4</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a[<span class="number">0</span>]&lt;&lt;<span class="string">" "</span>&lt;&lt;a[<span class="number">1</span>]&lt;&lt;<span class="string">" "</span>&lt;&lt;a[<span class="number">2</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;b[<span class="number">0</span>]&lt;&lt;<span class="string">" "</span>&lt;&lt;b[<span class="number">1</span>]&lt;&lt;<span class="string">" "</span>&lt;&lt;b[<span class="number">2</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> pos1 = max_element(aw.begin(),aw.end());</span><br><span class="line">    <span class="keyword">auto</span> pos2 = max_element(bw.begin(),bw.end());</span><br><span class="line">    <span class="keyword">auto</span> b1 = aw.begin(),b2 = bw.begin();</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;b1!=pos1;++b1,++i);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;g[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;b2!=pos2;++b2,++i);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;g[i];</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1017</title>
      <link href="/2018/10/11/basic-1017/"/>
      <url>/2018/10/11/basic-1017/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; result;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(s.size()==<span class="number">1</span>&amp;&amp;(s[<span class="number">0</span>]-<span class="string">'0'</span>&lt;n))&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"0 "</span>&lt;&lt;s;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> yu=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> dividend = s[i]-<span class="string">'0'</span>;</span><br><span class="line">        dividend+=yu*<span class="number">10</span>;</span><br><span class="line">        yu = dividend%n;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;dividend/n==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        result.push_back(dividend/n);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> item:result)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;item;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;yu;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1013</title>
      <link href="/2018/10/09/basic-1013/"/>
      <url>/2018/10/09/basic-1013/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(<span class="built_in">sqrt</span>(<span class="keyword">static_cast</span>&lt;<span class="keyword">double</span>&gt;(n)));++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,n,i,j;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; prime;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=<span class="number">1000000</span>;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;i!=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(judge(i))&#123;</span><br><span class="line">            prime.push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(prime.size()&gt;n)&#123;   <span class="comment">//第一次搞错了，不是素数到10000，而是素数的个数到10000</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m<span class="number">-1</span>;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count==<span class="number">10</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            count=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;prime[i];</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1041</title>
      <link href="/2018/10/09/basic-1041/"/>
      <url>/2018/10/09/basic-1041/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">student</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> id;</span><br><span class="line">    <span class="keyword">int</span> shi,kao;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(student a,student b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.shi&lt;b.shi;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;student&gt; stu;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vi;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        student s;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s.id&gt;&gt;s.shi&gt;&gt;s.kao;</span><br><span class="line">        stu.push_back(s);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(stu.begin(),stu.end(),cmp);</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">        vi.push_back(num);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;stu[num].id&lt;&lt;" "&lt;&lt;stu[num].shi&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> item:vi)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;stu[item<span class="number">-1</span>].id&lt;&lt;<span class="string">" "</span>&lt;&lt;stu[item<span class="number">-1</span>].kao&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1031</title>
      <link href="/2018/10/09/basic-1031/"/>
      <url>/2018/10/09/basic-1031/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> m[]=&#123;<span class="string">'1'</span>,<span class="string">'0'</span>,<span class="string">'X'</span>,<span class="string">'9'</span>,<span class="string">'8'</span>,<span class="string">'7'</span>,<span class="string">'6'</span>,<span class="string">'5'</span>,<span class="string">'4'</span>,<span class="string">'3'</span>,<span class="string">'2'</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> quan[] = &#123;<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">string</span> id;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;id;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">17</span>;i++)&#123;</span><br><span class="line">            <span class="comment">/*if(!(id[i]&gt;='0'&amp;&amp;id[i]&lt;='9'))&#123;</span></span><br><span class="line"><span class="comment">                cout&lt;&lt;id&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">                flag=0;</span></span><br><span class="line"><span class="comment">                sum=0;</span></span><br><span class="line"><span class="comment">                continue;</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">            sum+=quan[i]*(<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(id[i])-<span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(id[<span class="number">17</span>]!=m[sum%<span class="number">11</span>])&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;id&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            flag=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sum=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"All passed"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1015</title>
      <link href="/2018/10/09/basic-1015/"/>
      <url>/2018/10/09/basic-1015/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">node</span>&#123;</span>   <span class="comment">//碰到需要对多种数据进行排序并输出的题目，最好定义一个类或结构体，这样定义比较函数或其他函数也很方便</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> id,moral,talent;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((a.moral+a.talent)!=(b.moral+b.talent))&#123;</span><br><span class="line">        <span class="keyword">return</span> (a.moral+a.talent)&gt;(b.moral+b.talent);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a.moral!=b.moral)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.moral&gt;b.moral;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a.id&lt;b.id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,l,h;</span><br><span class="line">    <span class="built_in">vector</span>&lt;node&gt; s[<span class="number">4</span>];</span><br><span class="line">    node temp;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;l&gt;&gt;h;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> total = n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;   <span class="comment">//在输入的时候就直接把不合规矩的去掉，你思维太死板了，老想着全输入完之后再处理</span></span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;temp.id&gt;&gt;temp.moral&gt;&gt;temp.talent;</span><br><span class="line">        <span class="keyword">if</span>(temp.moral&lt;l || temp.talent&lt;l)&#123;</span><br><span class="line">            total--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(temp.moral&gt;=h &amp;&amp; temp.talent&gt;=h)&#123;</span><br><span class="line">            s[<span class="number">0</span>].push_back(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(temp.moral&gt;=h &amp;&amp; temp.talent&lt;h)&#123;</span><br><span class="line">            s[<span class="number">1</span>].push_back(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(temp.moral&lt;h &amp;&amp; temp.talent&lt;h &amp;&amp; temp.moral&gt;=temp.talent)&#123;</span><br><span class="line">            s[<span class="number">2</span>].push_back(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            s[<span class="number">3</span>].push_back(temp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;total&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;++i)&#123;</span><br><span class="line">        sort(s[i].begin(),s[i].end(),cmp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> item:s[i])&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;item.id&lt;&lt;<span class="string">" "</span>&lt;&lt;item.moral&lt;&lt;<span class="string">" "</span>&lt;&lt;item.talent&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    vector&lt;int&gt; id,id_sort;</span></span><br><span class="line"><span class="comment">    vector&lt;int&gt; moral,moral_sort;</span></span><br><span class="line"><span class="comment">    vector&lt;int&gt; talent,talent_sort;</span></span><br><span class="line"><span class="comment">    vector&lt;int&gt; total1,total2,total3,total4;</span></span><br><span class="line"><span class="comment">    cin&gt;&gt;n&gt;&gt;l&gt;&gt;h;</span></span><br><span class="line"><span class="comment">    while(n--)&#123;</span></span><br><span class="line"><span class="comment">        int i,m,t;</span></span><br><span class="line"><span class="comment">        cin&gt;&gt;i&gt;&gt;m&gt;&gt;t;</span></span><br><span class="line"><span class="comment">        id.push_back(i);</span></span><br><span class="line"><span class="comment">        moral.push_back(m);</span></span><br><span class="line"><span class="comment">        talent.push_back(t);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    for(auto bi=id.begin(),bm=moral.begin(),bt=talent.begin();bi!=id.end();++bi,++bm,++bt)&#123;</span></span><br><span class="line"><span class="comment">        if(*bm&lt;l || *bt&lt;l)&#123;</span></span><br><span class="line"><span class="comment">            bi=id.erase(bi),--bi;</span></span><br><span class="line"><span class="comment">            bm=moral.erase(bm),--bm;</span></span><br><span class="line"><span class="comment">            bt=talent.erase(bt),--bt;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    cout&lt;&lt;id.size()&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">    for(auto bi=id.begin(),bm=moral.begin(),bt=talent.begin();bi!=id.end();++bi,++bm,++bt)&#123;</span></span><br><span class="line"><span class="comment">        if(*bm&gt;=h&amp;&amp;*bt&gt;=h)&#123;</span></span><br><span class="line"><span class="comment">            total1.push_back(*bm+*bt);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        else if(*bm&gt;=h &amp;&amp; *bt&lt;h)&#123;</span></span><br><span class="line"><span class="comment">            total2.push_back(*bm+*bt);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        else if(*bm &gt;= *bt)&#123;</span></span><br><span class="line"><span class="comment">            total3.push_back(*bm+*bt);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        else&#123;</span></span><br><span class="line"><span class="comment">            total4.push_back(*bm+*bt);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    sort(total1.rbegin(),total1.rend());</span></span><br><span class="line"><span class="comment">    sort(total2.rbegin(),total2.rend());</span></span><br><span class="line"><span class="comment">    sort(total3.rbegin(),total3.rend());</span></span><br><span class="line"><span class="comment">    sort(total4.rbegin(),total4.rend());</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    cout&lt;&lt;total1.size()+total2.size()+total3.size()+total4.size()&lt;&lt;endl;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    for(size_t i=0;i&lt;total1.size();++i)&#123;  //处理第一等</span></span><br><span class="line"><span class="comment">        for(size_t j=0;j&lt;id.size();++j)&#123;</span></span><br><span class="line"><span class="comment">            if(moral[j]+talent[j]==total1[i])&#123;</span></span><br><span class="line"><span class="comment">                if(moral[j]&gt;=h &amp;&amp; talent[j]&gt;=h)&#123;</span></span><br><span class="line"><span class="comment">                    id_sort.push_back(id[j]);</span></span><br><span class="line"><span class="comment">                    moral_sort.push_back(moral[j]);</span></span><br><span class="line"><span class="comment">                    talent_sort.push_back(talent[j]);</span></span><br><span class="line"><span class="comment">                    id[j]=moral[j]=talent[j]=-1;</span></span><br><span class="line"><span class="comment">                    break;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    for(size_t i=0;i&lt;total2.size();++i)&#123;  //处理第二等</span></span><br><span class="line"><span class="comment">        for(size_t j=0;j&lt;id.size();++j)&#123;</span></span><br><span class="line"><span class="comment">            if(moral[j]+talent[j]==total2[i])&#123;</span></span><br><span class="line"><span class="comment">                if(moral[j]&gt;=h &amp;&amp; talent[j]&lt;h)&#123;</span></span><br><span class="line"><span class="comment">                    id_sort.push_back(id[j]);</span></span><br><span class="line"><span class="comment">                    moral_sort.push_back(moral[j]);</span></span><br><span class="line"><span class="comment">                    talent_sort.push_back(talent[j]);</span></span><br><span class="line"><span class="comment">                    id[j]=moral[j]=talent[j]=-1;</span></span><br><span class="line"><span class="comment">                    break;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    for(size_t i=0;i&lt;total3.size();++i)&#123;  //处理第三等</span></span><br><span class="line"><span class="comment">        for(size_t j=0;j&lt;id.size();++j)&#123;</span></span><br><span class="line"><span class="comment">            if(moral[j]+talent[j]==total3[i])&#123;</span></span><br><span class="line"><span class="comment">                if(moral[j]&lt;h &amp;&amp; talent[j]&lt;h &amp;&amp; moral[j]&gt;=talent[j] &amp;&amp; moral[j]!=-1)&#123;</span></span><br><span class="line"><span class="comment">                    id_sort.push_back(id[j]);</span></span><br><span class="line"><span class="comment">                    moral_sort.push_back(moral[j]);</span></span><br><span class="line"><span class="comment">                    talent_sort.push_back(talent[j]);</span></span><br><span class="line"><span class="comment">                    id[j]=moral[j]=talent[j]=-1;</span></span><br><span class="line"><span class="comment">                    break;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    for(size_t i=0;i&lt;total4.size();++i)&#123;  //处理第四等</span></span><br><span class="line"><span class="comment">        for(size_t j=0;j&lt;id.size();++j)&#123;</span></span><br><span class="line"><span class="comment">            if(moral[j]!=-1)&#123;</span></span><br><span class="line"><span class="comment">                id_sort.push_back(id[j]);</span></span><br><span class="line"><span class="comment">                moral_sort.push_back(moral[j]);</span></span><br><span class="line"><span class="comment">                talent_sort.push_back(talent[j]);</span></span><br><span class="line"><span class="comment">                id[j]=moral[j]=talent[j]=-1;</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    int count=0,flag=0;  //flag决定是否进行排序，默认第一个和第二个总分不同</span></span><br><span class="line"><span class="comment">    for(int i=0;i&lt;id_sort.size()-1;++i)&#123;</span></span><br><span class="line"><span class="comment">        if(moral_sort[i]+talent_sort[i]==moral_sort[i+1]+talent_sort[i+1])&#123;</span></span><br><span class="line"><span class="comment">            ++count;</span></span><br><span class="line"><span class="comment">            flag = 1;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        else&#123;</span></span><br><span class="line"><span class="comment">            if(!flag)&#123;   //如果flag为0，表示前面没有相同的总成绩，不用排序。若flag为1，表示前面有几个相同的总成绩，因此需要排序</span></span><br><span class="line"><span class="comment">                continue;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            for(int j=i-count;j&lt;i-1;++j)&#123;</span></span><br><span class="line"><span class="comment">                for(int k=i-count;k&lt;i-1;++k)&#123;</span></span><br><span class="line"><span class="comment">                    if(moral_sort[k]&lt;moral_sort[k+1])&#123;           //按道德分数降序排列</span></span><br><span class="line"><span class="comment">                        int temp = moral_sort[k];</span></span><br><span class="line"><span class="comment">                        moral_sort[k] = moral_sort[k+1];</span></span><br><span class="line"><span class="comment">                        moral_sort[k+1] = temp;</span></span><br><span class="line"><span class="comment">                        temp = talent_sort[k];</span></span><br><span class="line"><span class="comment">                        talent_sort[k] = talent_sort[k+1];</span></span><br><span class="line"><span class="comment">                        talent_sort[k+1] = temp;</span></span><br><span class="line"><span class="comment">                        temp = id_sort[k];</span></span><br><span class="line"><span class="comment">                        id_sort[k] = id_sort[k+1];</span></span><br><span class="line"><span class="comment">                        id_sort[k+1] = temp;</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                    else if(moral_sort[k]==moral[k+1]&amp;&amp;id_sort[k]&gt;id_sort[k+1])&#123;  //道德分数也相同，则按id升序</span></span><br><span class="line"><span class="comment">                        int temp = moral_sort[k];</span></span><br><span class="line"><span class="comment">                        moral_sort[k] = moral_sort[k+1];</span></span><br><span class="line"><span class="comment">                        moral_sort[k+1] = moral_sort[k];</span></span><br><span class="line"><span class="comment">                        temp = talent_sort[k];</span></span><br><span class="line"><span class="comment">                        talent_sort[k] = talent_sort[k+1];</span></span><br><span class="line"><span class="comment">                        talent_sort[k+1] = talent_sort[k];</span></span><br><span class="line"><span class="comment">                        temp = id_sort[k];</span></span><br><span class="line"><span class="comment">                        id_sort[k] = id_sort[k+1];</span></span><br><span class="line"><span class="comment">                        id_sort[k+1] = id_sort[k];    </span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            count=0;</span></span><br><span class="line"><span class="comment">            flag = 0;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    cout&lt;&lt;id_sort.size()&lt;&lt;endl;  //打印结果</span></span><br><span class="line"><span class="comment">    for(size_t i=0;i&lt;id_sort.size();++i)&#123;</span></span><br><span class="line"><span class="comment">        cout&lt;&lt;id_sort[i]&lt;&lt;" "&lt;&lt;moral_sort[i]&lt;&lt;" "&lt;&lt;talent_sort[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1014</title>
      <link href="/2018/10/09/basic-1014/"/>
      <url>/2018/10/09/basic-1014/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; xingqi=&#123;<span class="string">"MON"</span>,<span class="string">"TUE"</span>,<span class="string">"WED"</span>,<span class="string">"THU"</span>,<span class="string">"FRI"</span>,<span class="string">"SAT"</span>,<span class="string">"SUN"</span>&#125;;</span><br><span class="line">    <span class="built_in">string</span> s1,s2,s3,s4;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cin</span>&gt;&gt;s1&gt;&gt;s2&gt;&gt;s3&gt;&gt;s4;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s1.size()&amp;&amp;i&lt;s2.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s1[i]==s2[i])&#123;</span><br><span class="line">            <span class="keyword">if</span>(count==<span class="number">1</span>&amp;&amp;s1[i]&gt;=<span class="string">'A'</span> &amp;&amp; s1[i]&lt;=<span class="string">'G'</span>)&#123;   <span class="comment">//大写字母相同</span></span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;xingqi[<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(s1[i])<span class="number">-65</span>]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">                    count=<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(count==<span class="number">2</span>)&#123;  <span class="comment">//大写字母或者数字字符</span></span><br><span class="line">                <span class="keyword">if</span>(s1[i]&gt;=<span class="string">'0'</span> &amp;&amp; s1[i]&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>&lt;&lt;<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(s1[i])<span class="number">-48</span>&lt;&lt;<span class="string">":"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//break;</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s1[i]&gt;=<span class="string">'A'</span> &amp;&amp; s1[i]&lt;=<span class="string">'N'</span>)&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(s1[i])<span class="number">-55</span>&lt;&lt;<span class="string">":"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s3.size()&amp;&amp;i&lt;s4.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s3[i]==s4[i])&#123;</span><br><span class="line">            <span class="keyword">if</span>(s3[i]&gt;=<span class="string">'a'</span>&amp;&amp;s3[i]&lt;=<span class="string">'z'</span> || s3[i]&gt;=<span class="string">'A'</span>&amp;&amp;s3[i]&lt;=<span class="string">'Z'</span>) <span class="comment">//字母相同</span></span><br><span class="line">                <span class="keyword">if</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>&lt;&lt;i;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;i;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1056</title>
      <link href="/2018/10/07/basic-1056/"/>
      <url>/2018/10/07/basic-1056/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; total;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">        total.push_back(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;total.size();++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">size_t</span> j=<span class="number">0</span>;j&lt;total.size();++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=j)&#123;</span><br><span class="line">            sum+=total[i]*<span class="number">10</span>+total[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1002</title>
      <link href="/2018/10/07/basic-1002/"/>
      <url>/2018/10/07/basic-1002/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; pinyin = &#123;<span class="string">"ling"</span>,<span class="string">"yi"</span>,<span class="string">"er"</span>,<span class="string">"san"</span>,<span class="string">"si"</span>,<span class="string">"wu"</span>,<span class="string">"liu"</span>,<span class="string">"qi"</span>,<span class="string">"ba"</span>,<span class="string">"jiu"</span>&#125;;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; out;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">string</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i!=n.size();++i)&#123;</span><br><span class="line">        sum += <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(n[i]<span class="number">-48</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(sum)&#123;</span><br><span class="line">        out.push_back(sum%<span class="number">10</span>);</span><br><span class="line">        sum /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> b = out.rbegin();b!=out.rend();++b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;pinyin[*b];</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1006</title>
      <link href="/2018/10/07/basic-1006/"/>
      <url>/2018/10/07/basic-1006/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vi;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = n%<span class="number">10</span>;</span><br><span class="line">        vi.push_back(temp);</span><br><span class="line">        ++count;</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag = count;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=count<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;vi[i];++j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">'B'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">'S'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;j+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1007</title>
      <link href="/2018/10/07/basic-1007/"/>
      <url>/2018/10/07/basic-1007/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(<span class="built_in">sqrt</span>(<span class="keyword">static_cast</span>&lt;<span class="keyword">double</span>&gt;(n)));++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; prime;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;i!=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(judge(i))&#123;</span><br><span class="line">            prime.push_back(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;prime.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(prime[i+<span class="number">1</span>]-prime[i]==<span class="number">2</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;count;</span><br><span class="line">    </span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1021</title>
      <link href="/2018/10/07/basic-1021/"/>
      <url>/2018/10/07/basic-1021/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; count = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;item:str)&#123;</span><br><span class="line">        count[item-<span class="string">'0'</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;count.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count[i]!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">":"</span>&lt;&lt;count[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1008</title>
      <link href="/2018/10/07/basic-1008/"/>
      <url>/2018/10/07/basic-1008/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,move;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;move;</span><br><span class="line">    <span class="keyword">int</span> nn = n;</span><br><span class="line">    <span class="keyword">if</span>(move&gt;n)&#123;</span><br><span class="line">        move = move%n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">array</span>;</span><br><span class="line">    <span class="keyword">while</span>(nn--)&#123;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">        <span class="built_in">array</span>.push_back(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n-move;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">array</span>[i];</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n-move;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">array</span>[i];</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1009</title>
      <link href="/2018/10/07/basic-1009/"/>
      <url>/2018/10/07/basic-1009/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; str;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s)&#123;</span><br><span class="line">        str.push_back(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> b = str.rbegin();b!=str.rend();++b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;*b;</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1010</title>
      <link href="/2018/10/07/basic-1010/"/>
      <url>/2018/10/07/basic-1010/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; d;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">        d.push_back(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;d.size();i+=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[i+<span class="number">1</span>]==<span class="number">0</span>)&#123;</span><br><span class="line">           <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;d[i]*d[i+<span class="number">1</span>]&lt;&lt;<span class="string">" "</span>&lt;&lt;d[i+<span class="number">1</span>]<span class="number">-1</span>;</span><br><span class="line">        ++count;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"0 0"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//根本不用一次全输入完再统一检查。。。输入一对检查一对就行。。。零多项式表示没有输入多项式，但是要用0 0表示，因此最后要加一个判定</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1011</title>
      <link href="/2018/10/07/basic-1011/"/>
      <url>/2018/10/07/basic-1011/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t,count=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> a,b,c;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">        <span class="keyword">if</span>(a+b&gt;c)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;count&lt;&lt;<span class="string">": true"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Case #"</span>&lt;&lt;count&lt;&lt;<span class="string">": false"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1012</title>
      <link href="/2018/10/07/basic-1012/"/>
      <url>/2018/10/07/basic-1012/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; sort_num;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; a=&#123;<span class="number">0.0</span>,<span class="number">0.0</span>,<span class="number">0.0</span>,<span class="number">0.0</span>,<span class="number">0.0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">        sort_num.push_back(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>,count2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;sort_num.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(sort_num[i]%<span class="number">10</span>==<span class="number">0</span>)&#123;   <span class="comment">//a1</span></span><br><span class="line">            a[<span class="number">0</span>]+=sort_num[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sort_num[i]%<span class="number">5</span>==<span class="number">1</span>)&#123;    <span class="comment">//a2</span></span><br><span class="line">            a[<span class="number">1</span>]+=sort_num[i]*<span class="built_in">pow</span>(<span class="number">-1</span>,count2);</span><br><span class="line">            ++count2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sort_num[i]%<span class="number">5</span>==<span class="number">2</span>)&#123;    <span class="comment">//a3</span></span><br><span class="line">            a[<span class="number">2</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sort_num[i]%<span class="number">5</span>==<span class="number">3</span>)&#123;    <span class="comment">//a4</span></span><br><span class="line">            a[<span class="number">3</span>]+=sort_num[i];</span><br><span class="line">            ++count;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sort_num[i]%<span class="number">5</span>==<span class="number">4</span>)&#123;    <span class="comment">//a5</span></span><br><span class="line">            <span class="keyword">if</span>(a[<span class="number">4</span>]&lt;sort_num[i])&#123;</span><br><span class="line">                a[<span class="number">4</span>] = sort_num[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count)&#123;  <span class="comment">//避免产生除0错误</span></span><br><span class="line">        a[<span class="number">3</span>] = a[<span class="number">3</span>]/count;</span><br><span class="line">    &#125;</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">size_t</span> i =<span class="number">0</span>;i!=a.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">0</span>&amp;&amp;i==<span class="number">1</span>)&#123;    <span class="comment">//处理a2的情况，避免各个数字相加和为0却输出了N</span></span><br><span class="line">            <span class="keyword">if</span>(count2!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"N"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"N"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%.1f"</span>,a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1001</title>
      <link href="/2018/10/07/basic-1001/"/>
      <url>/2018/10/07/basic-1001/</url>
      <content type="html"><![CDATA[<p>先把代码传上来…思路和解题方法什么的慢慢补…最开始都是些简单到不能再简单的oj题，一步一步慢慢走。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/*if(num == 1)&#123;</span></span><br><span class="line"><span class="comment">        std::cout&lt;&lt;1;</span></span><br><span class="line"><span class="comment">        return 0;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">while</span>(num!=<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(num%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            num = <span class="number">3</span>*num + <span class="number">1</span>;</span><br><span class="line">            num /= <span class="number">2</span>;</span><br><span class="line">            count += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            num /= <span class="number">2</span>;</span><br><span class="line">            count += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;count;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1003</title>
      <link href="/2018/10/07/basic-1003/"/>
      <url>/2018/10/07/basic-1003/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="built_in">string</span> str)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nP=<span class="number">0</span>,nT=<span class="number">0</span>,nA=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;item:str)&#123;</span><br><span class="line">        <span class="keyword">if</span>(item == <span class="string">'P'</span> )&#123;</span><br><span class="line">            nP++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(item == <span class="string">'T'</span>)&#123;</span><br><span class="line">            nT++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(item == <span class="string">'A'</span>)&#123;</span><br><span class="line">            nA++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(item!=<span class="string">'P'</span> &amp;&amp; item !=<span class="string">'A'</span> &amp;&amp; item !=<span class="string">'T'</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(nA==<span class="number">0</span>||nP&gt;<span class="number">1</span>||nT&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(nP==<span class="number">0</span>||nT==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> P = find(str.begin(),str.end(),<span class="string">'P'</span>);</span><br><span class="line">    <span class="keyword">auto</span> T = find(str.begin(),str.end(),<span class="string">'T'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(P&gt;T||P+<span class="number">1</span>==T)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">auto</span> total = (P-str.cbegin())*(T-P<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">if</span>(total != (str.cend()-T<span class="number">-1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(P-str.cbegin() == str.cend()-T<span class="number">-1</span> &amp;&amp; T-P==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">        <span class="keyword">bool</span> b = judge(str);</span><br><span class="line">        <span class="keyword">if</span>(b)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1004</title>
      <link href="/2018/10/07/basic-1004/"/>
      <url>/2018/10/07/basic-1004/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vname;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; vid;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vgrade;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="built_in">string</span> id;</span><br><span class="line">    <span class="keyword">int</span> grade;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;name&gt;&gt;id&gt;&gt;grade;</span><br><span class="line">        vname.push_back(name);</span><br><span class="line">        vid.push_back(id);</span><br><span class="line">        vgrade.push_back(grade);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;name&lt;&lt;id&lt;&lt;grade&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> min = <span class="number">0</span>,max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vgrade.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vgrade[i]&lt;vgrade[min])&#123;</span><br><span class="line">            min = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(vgrade[i]&gt;vgrade[max])&#123;</span><br><span class="line">            max = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;vname[max]&lt;&lt;<span class="string">" "</span>&lt;&lt;vid[max]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;vname[min]&lt;&lt;<span class="string">" "</span>&lt;&lt;vid[min];</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1005</title>
      <link href="/2018/10/07/basic-1005/"/>
      <url>/2018/10/07/basic-1005/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; num,end;   <span class="comment">//两个vector，一个用来保存输入，一个用来保存结果</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; cover(<span class="number">100</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(<span class="number">0</span>));  <span class="comment">//用来保存每个输入值在递推过程中遇到的所有数</span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;temp;</span><br><span class="line">        num.push_back(temp);</span><br><span class="line">        end.push_back(temp);  <span class="comment">//首先将所有输入保存，随后再删除</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num.size();++i)&#123;   <span class="comment">//遍历所有输入，保存每个输入值在递推过程中遇到的所有数</span></span><br><span class="line">        <span class="keyword">int</span> temp = num[i];</span><br><span class="line">        <span class="keyword">while</span>(temp!=<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(temp%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">                temp = <span class="number">3</span>*temp + <span class="number">1</span>;</span><br><span class="line">                temp = temp/<span class="number">2</span>;</span><br><span class="line">                cover[i].push_back(temp);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                temp = temp/<span class="number">2</span>;</span><br><span class="line">                cover[i].push_back(temp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(find(end.begin(),end.end(),num[i])==end.end())&#123;   <span class="comment">//如果某一输入值已经从结果中去除，则不需要对该值进行循环，以此降低时间开销</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;         </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;num.size();++j)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(find(end.begin(),end.end(),num[j])==end.end())&#123;   <span class="comment">//同上</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">auto</span> index = find(cover[i].cbegin(),cover[i].cend(),num[j]); <span class="comment">//查找输入值num[j]是否出现在输入值num[i]的所有递推数中，如果出现了，则从结果中把这个数(num[j])删除</span></span><br><span class="line">            <span class="keyword">if</span>(index!=cover[i].end())&#123;</span><br><span class="line">                <span class="comment">//auto I = find(num.begin(),num.end(),*index);</span></span><br><span class="line">                <span class="keyword">auto</span> I = find(end.begin(),end.end(),*index);  <span class="comment">//*index值与num[j]相同</span></span><br><span class="line">                <span class="keyword">if</span>(I!=end.end())&#123;</span><br><span class="line">                    end.erase(I);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(end.rbegin(),end.rend());</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;end.size();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;end[i];</span><br><span class="line">        ++count;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic-1016</title>
      <link href="/2018/10/07/basic-1016/"/>
      <url>/2018/10/07/basic-1016/</url>
      <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> a,b,pa=<span class="string">""</span>,pb=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">char</span> da,db;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;da&gt;&gt;b&gt;&gt;db;</span><br><span class="line">    <span class="keyword">int</span> na=<span class="number">0</span>,nb=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;item:a)&#123;</span><br><span class="line">        <span class="keyword">if</span>(item == da)&#123;</span><br><span class="line">            pa+=da;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;item:b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(item == db)&#123;</span><br><span class="line">            pb+=db;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pa==<span class="string">""</span>)&#123;</span><br><span class="line">        pa+=<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pb==<span class="string">""</span>)&#123;</span><br><span class="line">        pb+=<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;stoi(pa)+stoi(pb);</span><br><span class="line">    getchar();</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OnlineJudge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAT-basic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>git学习笔记</title>
      <link href="/2018/10/07/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/10/07/git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>##初始化仓库</p><p><strong>git init &lt;dir_name&gt;</strong>   在文件夹中创建一个dir作为git版本库，dir_name可省略，此时默认将当前所在文件初始化为版本库。</p><p><strong>git log</strong> 查看历史记录，添加 –pretty=oneline 参数使得记录内容缩减为commit id和commit注释。</p><p><strong>git reset –hard HEAD^</strong>  回退到上一个版本，^表示回退的版本的数量，回退版本过多可以用~number代替，也可以用git log查找commit id，然后选择具体的id进行回退</p><p>##追踪修改，提交版本，查看不同</p><p><strong>git add &lt;file_name&gt;</strong> 将对working(工作区)中的file的修改添加到stage(暂存区)中。</p><p>git commit -m “说明（英文不会）” 将stage中的改动提交到repo(版本库)中。值得注意的是，commit是commit stage中的内容，如果不把working中的内容add到stage中，working中的修改就无法被commit到repo中。</p><p>当对某个或某些文件进行修改过后，先将修改的file add到stage中，然后将stage commit到repo中，也可以用git commit -a 两步并作一步，一步到位。</p><p><strong>git status</strong> 查看working当前状态(与上一次commit后的repo相比)。</p><p><strong>git diff</strong> 比较working和stage之间的差异，具体来说是跟最近一次add之后的stage相比，working发生了哪些变化，两次commit之间可以有多次add命令。因此如果一次性将所有修改都add到stage中，会出现git diff后啥也没有的情况。</p><p><strong>git diff –cached</strong> 比较stage和repo之间的差异。</p><p><strong>git diff HEAD – &lt;file_name&gt;</strong>  直接将working的file和repo的file相比。</p><p>##撤销修改</p><p><strong>git checkout – &lt;file_name&gt;</strong> 如果你还没有把修改add到stage中，此命令可以将working中对file的修改撤回到与最近一次commit后repo中的file相同的状态(反正你也没add，其实手动修改就行，没必要用这个命令，还有可能把不想改的东西改掉，但是如果你瞎jb改，自己都忘了改了哪些地方了，这个命令就派上用场了)。如果你已经把修改add到stage了，在此之后又做了修改，那么此命令可以把file撤回到与stage相同的状态。</p><p><strong>git reset HEAD &lt;file_name&gt;</strong>  可以把file在stage中的修改取消，也就是说可以撤销对file的add命令</p><p>上面两个命令后先时候可以把对某个file的修改从stage中撤销，并且把该file撤回到最近的repo状态。</p><p>##删除文件</p><p><strong>git rm</strong> 如果你想从版本库中把某文件删了，那么你就先用这个命令，然后commit，文件就从working和repo中同时被删除了。</p><p>如果你手一抖删错了，可以用git checkout – filename 将该文件还原，不过要注意，这一命令实际上使用repo或stage中(具体要看你有没有把修改add到stage中，参见上文)的文件替换working中的文件，也就是说，如果你在某次commit后对file做了修改，手抖之前没有add/commit，那么你对该文件的最新修改就没了。</p><p>如果你手抖把版本库的也删了，那你就得回退版本了，用git reset HEAD^回退上一个版本，然后再用checkout。</p><p>##分支管理<br>HEAD指向master，master指向最新的提交</p><p><strong>git branch</strong> 查看所有分支</p><p><strong>git branch new_branch; gitcheckout new_branch</strong> 创建一个分支new_branch，然后切换到该分支</p><p><strong>git checkout -b branch-name origin/branch-name</strong> 在本地创建和远程分支对应的分支，在本地新建的branch，如果没有推送到远程repo，那么该branch对从远程repo中clone的人来说就是不可见的。</p><p><strong>git branch -d</strong> 删除指定分支</p><p><strong>git checkout -b new_branch</strong> 上述两条命令可以用这条命令代替，即checkout加一个b参数</p><p><strong>git merge</strong> 制定分支合并到当前分支上</p><p><strong>git stash</strong> 将当前的working保存，等到合适的时候再重新读档。 竟然可以在branch1上stash，然后在branch2上pop…搞不懂</p><p><strong>git stash list</strong> 列出所有存档</p><p><strong>git stash apply; git stash drop</strong> 恢复后删除某分支，或者直接用 <strong>git stash pop</strong> 一步到位</p><p>##解决冲突</p><p>用git pull把远程库上的最新的提交从你要push的分支上拉下来，然后在本地合并，解决冲突，然后再推送，从远程repo拉下来之后会自动尝试合并。本质上和merge两个branch差不多，即在要合并的branch上解决冲突，然后merge。<strong>但是在pull之前，要先用 <strong>git branch –set-upstream-to=origin/branch branch</strong> 命令制定本地branch和远程origin/branch的联系，设置链接,如果提示no tracking information，则说明链接关系未创建</strong>。</p><p>##标签管理</p><p><strong>git tag</strong> 用git checkout 切换到某一分支上，然后用该命令打标签，标签按字母排序。标签总是和commit联系在一起，在不带commit id的情况下，标签默认和最新的commit挂钩，我们也可以手动指定标签与某一commit id挂钩。<br>还可以创建带有说明的标签，用-a指定标签名，-m指定说明文字。<br>不带任何参数可以查看所有标签</p><p><strong>git push origin &lt;tag_name&gt;</strong> 创建的标签都默认只储存在本地，可以使用该命令将标签推送到远程repo，或者用<strong>–tags</strong>参数一次性把所有尚未推送的标签都推送到远程repo。</p><p><strong>git tag -d</strong> 从本地删除标签<br><strong>git push origin :ref/tags/tag_name</strong> 从远程repo删除标签。 </p>]]></content>
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>开端</title>
      <link href="/2018/09/02/%E5%BC%80%E7%AB%AF/"/>
      <url>/2018/09/02/%E5%BC%80%E7%AB%AF/</url>
      <content type="html"><![CDATA[<p>此博客建立于2018年8月26日</p><p>其实两年前就有建一个博客的打算，期间也尝试过印象笔记等平台，但是由于当时太懒，再加上没有什么写博客的动力，所以就一直拖拖拖。最近趁着暑假还剩最后几天，赶紧找找网上的教程把博客建了。</p><p>现在是2018年9月2日晚上九点，明天就开学了，本来想着把心里的一些想法在博客上表达出来，觉得有很多想说的，但是真到开始写了又觉得没啥好写的哈哈，想到哪写到哪吧，文笔也不好，建站之初流量也不多，如果您能够在建站之初就看见我的第一篇博客也算咱们有缘。</p><p>这个博客主要是想记录我的学习历程，技术分享，读书和观影心得，以及一些矫情的随笔。</p><p>主要还是以技术分享为主，毕竟我的本意是把这个博客建成一个技术博客，辅之以生活的记录，一方面是记录我的学习之路，帮助自己理解和记忆学到的东西。而且把自己遇到的问题和解决方法记录下来，以后再遇到类似的问题也不用满世界搜索解决方法了，顺便能提升一下自己的语言组织能力和写作能力，另一方面如果真的能帮的到人的话倒也挺好的。</p><p>其实还有一点，那就是看别人写的技术博客就觉得很厉害，就有些手痒，希望自己也能写出这么厉害的东西。</p><p>嗯，我初步的想法是尽量做到每个月三到四篇技术博客的分享，不过由于我目前还是个弱鸡，最近才刚开始学C++，也谈不上什么技术，初期还是以学习记录和我自己对书本的理解为主，希望不久的将来我能够真正做到写一些能够称得上技术分享的文章。</p><p>另外就是一些读书/观影的心得和日常随笔了，因为我发现我总喜欢在同样的事情上耗费无意义的时间，用人话来说就是总喜欢反复纠结同样的事情，我想与其这样浪费时间，不如把心中想的写下来，而写下来的东西对于以后的我来说，不管是警示也好，回忆也好，总不至于再浪费更多的无意义的时间。</p><p>暂时就这么多吧</p><p>lby<br>2018年9月2日于学校宿舍</p>]]></content>
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 心情记录 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
